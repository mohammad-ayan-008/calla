WHITESPACE = _{ " " | "\t" | NEWLINE }

integer=@{ASCII_DIGIT+}

float=@{ASCII_DIGIT+ ~ "."~ ASCII_DIGIT+}

string=@{"\""~(ASCII_ALPHANUMERIC|" "|"_"|"{"|"}" | "%"|"\\"|"."|ASCII_DIGIT)*~"\""}


boolean={"true" | "false"}

NULL={"null"}

literal={  float | integer | string | boolean | NULL}
program ={
  func*
}

ptrtype={
   (
   "int*" | "float*" | "bool*" | "str*" 
   )
}

type={
   (
   "int" | "float" | "bool" | "str" 
   )

}


identifier = { ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* }

param = { type ~ identifier }
params = { param ~ ("," ~ param)* }

func = { 
  "callable" ~ identifier ~ "(" ~ params? ~ ")" ~ "->" ~ type ~ "{" ~ stmt*  ~"}"
}
pointer_decl={
  ptrtype ~ identifier ~"="~exp ~ ";"
}
var_decl = {

  type ~ identifier ~"="~exp ~ ";"
}

stmt ={
  ret_st |printst |var_decl| expr_stmt
}
expr_stmt = { exp ~ ";" }
ret_st={
   "return" ~ (exp)~";"
}

format_specifier ={
   "%d" | "%f"
}

printst = { "print(" ~ string ~ "," ~ exp ~ ");" }

exp = { assignment }

assignment = {
    identifier ~ "=" ~ exp
    | equality
}
equality = {
  comparision ~ ((equality_op) ~ comparision)* 
}
comparision={
  term ~ ((comparision_op)~ term)* 
}
term ={
  factor ~ ((term_op) ~ factor)* 
}
factor ={
   unary ~ ((factor_op) ~ unary)* 
}

unary ={
(unary_op) ~ unary | primary
}
fn_call = { "@" ~ identifier ~ "(" ~ (exp ~ ("," ~ exp)*)? ~ ")" }
primary={
   fn_call    |
   identifier | 
   literal    | 
   "(" ~ exp ~")"
}


equality_op = { "!=" | "==" }
comparision_op = { ">=" | ">" | "<=" | "<" }
term_op = { "+" | "-" }
unary_op={"!" | "-"}
factor_op = { "*" | "/" }
